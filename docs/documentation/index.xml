<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on Tegola With Open Layers</title>
    <link>/documentation/</link>
    <description>Recent content in Documentation on Tegola With Open Layers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/documentation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting Started with Tegola</title>
      <link>/documentation/getting-started/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/documentation/getting-started/</guid>
      <description>1. Download Tegola Download the latest version.
Choose the binary that matches the operating system Tegola will run on. Quick links are available below for your convenience:
 OSX Windows Linux  Find the Tegola file that was downloaded and move it into a fresh directory.
2. Get a data provider Tegola needs geospatial data to run. Currently, Tegola supports PostGIS which is a geospatial extension for PostgreSQL. If you don&amp;rsquo;t have PostGIS installed, download PostGIS.</description>
    </item>
    
    <item>
      <title>Tegola Configuration</title>
      <link>/documentation/configuration/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/documentation/configuration/</guid>
      <description>Overview The Tegola config file use TOML syntax and is comprised of three primary sections:
 Webserver: webserver configuration. Providers: data provider configuration (i.e. PostGIS). Maps: map configuration including map names, layers and zoom levels.  Webserver The webserver part of the config has the following parameters:
   Param Required Default Description     port No :8080 A string with the value for port.   log_file No  Location of a log file to write webserver logs to.</description>
    </item>
    
    <item>
      <title>HTTP Endpoints</title>
      <link>/documentation/http-endpoints/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/documentation/http-endpoints/</guid>
      <description>Introduction The following endpoints are used for communicating with Tegola over HTTP. All the endpoints expect a HTTP GET request.
/maps/:map/:z/:x/:y Will return a vector tile from the provided :map at the provided :z, :x: and :y values.
URL parameters  :map: The name of the map as defined in the Tegola config file. :z: The tile zoom. :x: The tile row. :y: The tile column.  /maps/:map/:layer/:z/:x/:y Will return a vector tile with a single :layer from the provided :map at the provided :z, :x: and :y values.</description>
    </item>
    
    <item>
      <title>Debugging Tegola</title>
      <link>/documentation/debugging/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/documentation/debugging/</guid>
      <description>Environment Variables The following environment variables can be used for debugging the tegola server:
SQL_DEBUG: specify the type of SQL debug information to output. Supports the following values:
 LAYER_SQL: print layer SQL as they&amp;rsquo;re parsed from the config file. EXECUTE_SQL: print SQL that is executed for each tile request and the number of items it returns or an error. LAYER_SQL:EXECUTE_SQL: print LAYER_SQL and EXECUTE_SQL.  Example $ SQL_DEBUG=LAYER_SQL tegola --config=/path/to/conf.</description>
    </item>
    
  </channel>
</rss>